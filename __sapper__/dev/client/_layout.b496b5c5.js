import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, x as create_slot, P as compute_rest_props, v as validate_slots, z as afterUpdate, T as assign, U as exclude_internal_props, f as element, h as claim_element, j as children, l as detach_dev, p as attr_dev, q as add_location, r as insert_dev, y as update_slot, t as transition_in, b as transition_out, Q as index, R as onDestroy, C as space, D as claim_space, W as set_attributes, u as append_dev, X as listen_dev, Z as get_spread_update, _ as run_all, G as binding_callbacks, A as current_component, B as getEventsAction, L as empty, M as group_outros, N as check_outros, E as toggle_class, F as action_destroyer, H as stores$1, I as validate_store, J as component_subscribe, a2 as getContext, o as onMount, K as validate_each_argument, c as create_component, a4 as query_selector_all, a as claim_component, m as mount_component, e as destroy_component, g as text, k as claim_text, O as destroy_each, n as noop } from './client.819062b1.js';
import { i as index_umd } from './index.umd.37669cb5.js';
import { T as TypographyHeading, a as TypographyBody } from './TypographyHeading.aded6356.js';

function integrateProps(a) {
  let keys = Object.getOwnPropertyNames(a);
  let arr = [];
  for (let index = 0; index < keys.length; index++) {
    arr[index] = keys[index].replace(/([A-Z])/g, "-$1").toLowerCase() + ":" + a[keys[index]] + ";";
  }
  return arr.filter(Boolean).join("");
}
function integrateDimensionProps(a) {
  let keys = Object.getOwnPropertyNames(a);
  let arr = [];
  for (let index = 0; index < keys.length; index++) {
    arr[index] =
      keys[index].replace(/([A-Z])/g, "-$1").toLowerCase() +
      `:var(--spectrum-global-dimension-${a[keys[index]]}, var(--spectrum-alias-${a[keys[index]]}));`;
  }
  return arr.filter(Boolean).join("");
}

function integrateAutoProps(a) {
  let keys = Object.getOwnPropertyNames(a);
  let arr = [];
  for (let index = 0; index < keys.length; index++) {
    if (typeof a[keys[index]] == "string" && a[keys[index]].search("size") > -1) {
      if (a[keys[index]].search("-size") > -1) {
        arr[index] =
          keys[index].replace(/([A-Z])/g, "-$1").toLowerCase() +
          `:calc(-1 * var(--spectrum-global-dimension-${a[keys[index]]}, var(--spectrum-alias-${a[keys[index]]})));`;
      } else {
        arr[index] =
          keys[index].replace(/([A-Z])/g, "-$1").toLowerCase() +
          `:var(--spectrum-global-dimension-${a[keys[index]]}, var(--spectrum-alias-${a[keys[index]]}));`;
      }
    } else if (typeof a[keys[index]] == "string" && determineMode(a[keys[index]])) {
      arr[index] =
        keys[index].replace(/([A-Z])/g, "-$1").toLowerCase() + `:var(--spectrum-global-color-${a[keys[index]]});`;
    } else {
      arr[index] = keys[index].replace(/([A-Z])/g, "-$1").toLowerCase() + ":" + a[keys[index]] + ";";
    }
  }
  return arr.filter(Boolean).join("");
}

function determineMode(t) {
  let colorKey = [
    "celery",
    "chartreuse",
    "yellow",
    "magenta",
    "fuchsia",
    "purple",
    "indigo",
    "seafoam",
    "red",
    "orange",
    "green",
    "blue",
    "gray",
  ];
  for (let index = 0; index < colorKey.length; index++) {
    if (t.search(colorKey[index]) != -1) {
      return true;
    }
  }
  return false;
}

/* node_modules/@rubus/rubus/src/packages/Layout/Flex.svelte generated by Svelte v3.29.4 */

const file = "node_modules/@rubus/rubus/src/packages/Layout/Flex.svelte";

function create_fragment(ctx) {
	let div;
	let div_style_value;
	let div_class_value;
	let current;
	const default_slot_template = /*#slots*/ ctx[21].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[20], null);

	const block = {
		c: function create() {
			div = element("div");
			if (default_slot) default_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { id: true, style: true, class: true });
			var div_nodes = children(div);
			if (default_slot) default_slot.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "id", /*id*/ ctx[0]);
			attr_dev(div, "style", div_style_value = /*layoutCssText*/ ctx[1] + /*spacingCssText*/ ctx[2] + /*sizingCssText*/ ctx[3] + /*positioningCssText*/ ctx[4] + /*componentStyle*/ ctx[5]);
			attr_dev(div, "class", div_class_value = /*$$restProps*/ ctx[6].class);
			add_location(div, file, 113, 0, 3100);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			if (default_slot) {
				default_slot.m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 1048576) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[20], dirty, null, null);
				}
			}

			if (!current || dirty & /*id*/ 1) {
				attr_dev(div, "id", /*id*/ ctx[0]);
			}

			if (!current || dirty & /*layoutCssText, spacingCssText, sizingCssText, positioningCssText, componentStyle*/ 62 && div_style_value !== (div_style_value = /*layoutCssText*/ ctx[1] + /*spacingCssText*/ ctx[2] + /*sizingCssText*/ ctx[3] + /*positioningCssText*/ ctx[4] + /*componentStyle*/ ctx[5])) {
				attr_dev(div, "style", div_style_value);
			}

			if (!current || dirty & /*$$restProps*/ 64 && div_class_value !== (div_class_value = /*$$restProps*/ ctx[6].class)) {
				attr_dev(div, "class", div_class_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (default_slot) default_slot.d(detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const omit_props_names = [
		"id","display","direction","wrap","justifyContent","alignContent","alignItems","gap","columnGap","rowGap","layout","spacing","sizing","positioning"
	];

	let $$restProps = compute_rest_props($$props, omit_props_names);
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Flex", slots, ['default']);
	let { id = "" } = $$props;
	let { display = "flex" } = $$props;
	let { direction = "row" } = $$props;
	let { wrap = "" } = $$props;
	let { justifyContent = "" } = $$props;
	let { alignContent = "" } = $$props;
	let { alignItems = "" } = $$props;
	let { gap = "" } = $$props;
	let { columnGap = "" } = $$props;
	let { rowGap = "" } = $$props;
	let { layout = {} } = $$props;
	let { spacing = {} } = $$props;
	let { sizing = {} } = $$props;
	let { positioning = {} } = $$props;
	let layoutCssText = "";
	let spacingCssText = "";
	let sizingCssText = "";
	let positioningCssText = "";

	afterUpdate(() => {
		$$invalidate(1, layoutCssText = integrateProps(layout));
		$$invalidate(2, spacingCssText = integrateDimensionProps(spacing));
		$$invalidate(3, sizingCssText = integrateAutoProps(sizing));
		$$invalidate(4, positioningCssText = integrateAutoProps(positioning));
	});

	$$self.$$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(6, $$restProps = compute_rest_props($$props, omit_props_names));
		if ("id" in $$new_props) $$invalidate(0, id = $$new_props.id);
		if ("display" in $$new_props) $$invalidate(7, display = $$new_props.display);
		if ("direction" in $$new_props) $$invalidate(8, direction = $$new_props.direction);
		if ("wrap" in $$new_props) $$invalidate(9, wrap = $$new_props.wrap);
		if ("justifyContent" in $$new_props) $$invalidate(10, justifyContent = $$new_props.justifyContent);
		if ("alignContent" in $$new_props) $$invalidate(11, alignContent = $$new_props.alignContent);
		if ("alignItems" in $$new_props) $$invalidate(12, alignItems = $$new_props.alignItems);
		if ("gap" in $$new_props) $$invalidate(13, gap = $$new_props.gap);
		if ("columnGap" in $$new_props) $$invalidate(14, columnGap = $$new_props.columnGap);
		if ("rowGap" in $$new_props) $$invalidate(15, rowGap = $$new_props.rowGap);
		if ("layout" in $$new_props) $$invalidate(16, layout = $$new_props.layout);
		if ("spacing" in $$new_props) $$invalidate(17, spacing = $$new_props.spacing);
		if ("sizing" in $$new_props) $$invalidate(18, sizing = $$new_props.sizing);
		if ("positioning" in $$new_props) $$invalidate(19, positioning = $$new_props.positioning);
		if ("$$scope" in $$new_props) $$invalidate(20, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({
		afterUpdate,
		integrateProps,
		integrateAutoProps,
		integrateDimensionProps,
		id,
		display,
		direction,
		wrap,
		justifyContent,
		alignContent,
		alignItems,
		gap,
		columnGap,
		rowGap,
		layout,
		spacing,
		sizing,
		positioning,
		layoutCssText,
		spacingCssText,
		sizingCssText,
		positioningCssText,
		componentStyle
	});

	$$self.$inject_state = $$new_props => {
		if ("id" in $$props) $$invalidate(0, id = $$new_props.id);
		if ("display" in $$props) $$invalidate(7, display = $$new_props.display);
		if ("direction" in $$props) $$invalidate(8, direction = $$new_props.direction);
		if ("wrap" in $$props) $$invalidate(9, wrap = $$new_props.wrap);
		if ("justifyContent" in $$props) $$invalidate(10, justifyContent = $$new_props.justifyContent);
		if ("alignContent" in $$props) $$invalidate(11, alignContent = $$new_props.alignContent);
		if ("alignItems" in $$props) $$invalidate(12, alignItems = $$new_props.alignItems);
		if ("gap" in $$props) $$invalidate(13, gap = $$new_props.gap);
		if ("columnGap" in $$props) $$invalidate(14, columnGap = $$new_props.columnGap);
		if ("rowGap" in $$props) $$invalidate(15, rowGap = $$new_props.rowGap);
		if ("layout" in $$props) $$invalidate(16, layout = $$new_props.layout);
		if ("spacing" in $$props) $$invalidate(17, spacing = $$new_props.spacing);
		if ("sizing" in $$props) $$invalidate(18, sizing = $$new_props.sizing);
		if ("positioning" in $$props) $$invalidate(19, positioning = $$new_props.positioning);
		if ("layoutCssText" in $$props) $$invalidate(1, layoutCssText = $$new_props.layoutCssText);
		if ("spacingCssText" in $$props) $$invalidate(2, spacingCssText = $$new_props.spacingCssText);
		if ("sizingCssText" in $$props) $$invalidate(3, sizingCssText = $$new_props.sizingCssText);
		if ("positioningCssText" in $$props) $$invalidate(4, positioningCssText = $$new_props.positioningCssText);
		if ("componentStyle" in $$props) $$invalidate(5, componentStyle = $$new_props.componentStyle);
	};

	let componentStyle;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*display, direction, wrap, justifyContent, alignContent, alignItems, gap, columnGap, rowGap*/ 65408) {
			 $$invalidate(5, componentStyle = [
				`display:${display};`,
				direction && `flex-direction:${direction};`,
				wrap && `flex-wrap:${wrap};`,
				justifyContent && `justify-content:${justifyContent};`,
				alignContent && `align-content:${alignContent}`,
				alignItems && `align-items:${alignItems}`,
				gap && `gap:var(--spectrum-global-dimension-${gap}, var(--spectrum-alias-${gap}));"`,
				columnGap && `column-gap:var(--spectrum-global-dimension-${columnGap}, var(--spectrum-alias-${columnGap}));"`,
				rowGap && `row-gap:var(--spectrum-global-dimension-${rowGap}, var(--spectrum-alias-${rowGap}));"`
			].filter(Boolean).join(""));
		}
	};

	return [
		id,
		layoutCssText,
		spacingCssText,
		sizingCssText,
		positioningCssText,
		componentStyle,
		$$restProps,
		display,
		direction,
		wrap,
		justifyContent,
		alignContent,
		alignItems,
		gap,
		columnGap,
		rowGap,
		layout,
		spacing,
		sizing,
		positioning,
		$$scope,
		slots
	];
}

class Flex extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance, create_fragment, safe_not_equal, {
			id: 0,
			display: 7,
			direction: 8,
			wrap: 9,
			justifyContent: 10,
			alignContent: 11,
			alignItems: 12,
			gap: 13,
			columnGap: 14,
			rowGap: 15,
			layout: 16,
			spacing: 17,
			sizing: 18,
			positioning: 19
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Flex",
			options,
			id: create_fragment.name
		});
	}

	get id() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get display() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set display(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get direction() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set direction(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get wrap() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set wrap(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get justifyContent() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set justifyContent(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get alignContent() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set alignContent(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get alignItems() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set alignItems(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get gap() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set gap(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get columnGap() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set columnGap(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get rowGap() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set rowGap(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get layout() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set layout(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get spacing() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set spacing(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get sizing() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set sizing(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get positioning() {
		throw new Error("<Flex>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set positioning(value) {
		throw new Error("<Flex>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* node_modules/@rubus/rubus/src/packages/Tabs/Tabs.svelte generated by Svelte v3.29.4 */
const file$1 = "node_modules/@rubus/rubus/src/packages/Tabs/Tabs.svelte";

function create_fragment$1(ctx) {
	let div1;
	let t;
	let div0;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[12].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[11], null);

	let div1_levels = [
		/*tabsProps*/ ctx[3],
		/*$$restProps*/ ctx[8],
		{ "aria-label": /*ariaLabel*/ ctx[1] },
		{
			"aria-orientation": /*orientation*/ ctx[0]
		}
	];

	let div1_data = {};

	for (let i = 0; i < div1_levels.length; i += 1) {
		div1_data = assign(div1_data, div1_levels[i]);
	}

	const block = {
		c: function create() {
			div1 = element("div");
			if (default_slot) default_slot.c();
			t = space();
			div0 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", {
				"aria-label": true,
				"aria-orientation": true
			});

			var div1_nodes = children(div1);
			if (default_slot) default_slot.l(div1_nodes);
			t = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true, style: true });
			children(div0).forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "spectrum-Tabs-selectionIndicator");
			attr_dev(div0, "style", /*selectionIndicatorSytle*/ ctx[4]);
			add_location(div0, file$1, 111, 2, 3096);
			set_attributes(div1, div1_data);
			add_location(div1, file$1, 101, 0, 2873);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);

			if (default_slot) {
				default_slot.m(div1, null);
			}

			append_dev(div1, t);
			append_dev(div1, div0);
			/*div1_binding*/ ctx[13](div1);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(div1, "resize", /*getStyleAttributeValue*/ ctx[6], false, false, false),
					listen_dev(div1, "click", /*getPosition*/ ctx[5], false, false, false),
					listen_dev(div1, "keydown", /*handleKeydown*/ ctx[7], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 2048) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[11], dirty, null, null);
				}
			}

			if (!current || dirty & /*selectionIndicatorSytle*/ 16) {
				attr_dev(div0, "style", /*selectionIndicatorSytle*/ ctx[4]);
			}

			set_attributes(div1, div1_data = get_spread_update(div1_levels, [
				dirty & /*tabsProps*/ 8 && /*tabsProps*/ ctx[3],
				dirty & /*$$restProps*/ 256 && /*$$restProps*/ ctx[8],
				(!current || dirty & /*ariaLabel*/ 2) && { "aria-label": /*ariaLabel*/ ctx[1] },
				(!current || dirty & /*orientation*/ 1) && {
					"aria-orientation": /*orientation*/ ctx[0]
				}
			]));
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			if (default_slot) default_slot.d(detaching);
			/*div1_binding*/ ctx[13](null);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	const omit_props_names = ["orientation","ariaLabel","isQuiet","isCompact"];
	let $$restProps = compute_rest_props($$props, omit_props_names);
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Tabs", slots, ['default']);
	let { orientation = "horizontal" } = $$props;
	let { ariaLabel = "tabList" } = $$props;
	let { isQuiet = false } = $$props;
	let { isCompact = false } = $$props;
	let selectedItemDimension;
	let tabs;
	let selectionIndicatorOffset;
	const observer = new index(getStyleAttributeValue);

	afterUpdate(() => {
		getStyleAttributeValue();
		index_umd.throttle(500, observer.observe(tabs));
	});

	onDestroy(() => {
		observer.unobserve(tabs);
	});

	function getPosition(e) {
		if (tabs.contains(e.target) && e.target.className.indexOf("spectrum-Tabs-item") != -1) {
			$$invalidate(14, selectedItemDimension = e.target.offsetWidth);
			$$invalidate(15, selectionIndicatorOffset = e.target.offsetLeft);
		}
	}

	function getStyleAttributeValue() {
		if (tabs) {
			const selectedItem = tabs.getElementsByClassName("is-selected");

			if (selectedItem.length == 1) {
				if (orientation == "horizontal") {
					$$invalidate(14, selectedItemDimension = selectedItem[0].offsetWidth);
					$$invalidate(15, selectionIndicatorOffset = selectedItem[0].offsetLeft);
				} else if (orientation == "vertical") {
					$$invalidate(14, selectedItemDimension = selectedItem[0].offsetHeight);
					$$invalidate(15, selectionIndicatorOffset = selectedItem[0].offsetTop);
				}
			}
		}
	}

	function handleKeydown(e) {
		let _e = event ? window.event : e;

		if (_e.keyCode == 13 || _e.keyCode == 32) {
			getPosition(e);
		}
	}

	function div1_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			tabs = $$value;
			$$invalidate(2, tabs);
		});
	}

	$$self.$$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(8, $$restProps = compute_rest_props($$props, omit_props_names));
		if ("orientation" in $$new_props) $$invalidate(0, orientation = $$new_props.orientation);
		if ("ariaLabel" in $$new_props) $$invalidate(1, ariaLabel = $$new_props.ariaLabel);
		if ("isQuiet" in $$new_props) $$invalidate(9, isQuiet = $$new_props.isQuiet);
		if ("isCompact" in $$new_props) $$invalidate(10, isCompact = $$new_props.isCompact);
		if ("$$scope" in $$new_props) $$invalidate(11, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({
		ResizeObserver: index,
		throttle: index_umd.throttle,
		afterUpdate,
		onDestroy,
		orientation,
		ariaLabel,
		isQuiet,
		isCompact,
		selectedItemDimension,
		tabs,
		selectionIndicatorOffset,
		observer,
		getPosition,
		getStyleAttributeValue,
		handleKeydown,
		tabsProps,
		selectionIndicatorSytle
	});

	$$self.$inject_state = $$new_props => {
		if ("orientation" in $$props) $$invalidate(0, orientation = $$new_props.orientation);
		if ("ariaLabel" in $$props) $$invalidate(1, ariaLabel = $$new_props.ariaLabel);
		if ("isQuiet" in $$props) $$invalidate(9, isQuiet = $$new_props.isQuiet);
		if ("isCompact" in $$props) $$invalidate(10, isCompact = $$new_props.isCompact);
		if ("selectedItemDimension" in $$props) $$invalidate(14, selectedItemDimension = $$new_props.selectedItemDimension);
		if ("tabs" in $$props) $$invalidate(2, tabs = $$new_props.tabs);
		if ("selectionIndicatorOffset" in $$props) $$invalidate(15, selectionIndicatorOffset = $$new_props.selectionIndicatorOffset);
		if ("tabsProps" in $$props) $$invalidate(3, tabsProps = $$new_props.tabsProps);
		if ("selectionIndicatorSytle" in $$props) $$invalidate(4, selectionIndicatorSytle = $$new_props.selectionIndicatorSytle);
	};

	let tabsProps;
	let selectionIndicatorSytle;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*orientation, isQuiet, isCompact*/ 1537) {
			 $$invalidate(3, tabsProps = {
				role: "tabList",
				class: [
					"spectrum-Tabs",
					orientation && `spectrum-Tabs--${orientation}`,
					isQuiet && "spectrum-Tabs--quiet",
					isCompact && "spectrum-Tabs--compact"
				].filter(Boolean).join(" ")
			});
		}

		if ($$self.$$.dirty & /*orientation, selectedItemDimension, selectionIndicatorOffset*/ 49153) {
			 $$invalidate(4, selectionIndicatorSytle = [
				orientation === "vertical" && `height: ${selectedItemDimension}px;`,
				orientation === "horizontal" && `width: ${selectedItemDimension}px;`,
				orientation === "vertical" && `transform:translateY(${selectionIndicatorOffset}px);`,
				orientation === "horizontal" && `transform:translateX(${!selectionIndicatorOffset
				? "var(--spectrum-tabs-focus-ring-padding-x, var(--spectrum-global-dimension-size-100)"
				: selectionIndicatorOffset + "px"});`
			].filter(Boolean).join(" "));
		}
	};

	return [
		orientation,
		ariaLabel,
		tabs,
		tabsProps,
		selectionIndicatorSytle,
		getPosition,
		getStyleAttributeValue,
		handleKeydown,
		$$restProps,
		isQuiet,
		isCompact,
		$$scope,
		slots,
		div1_binding
	];
}

class Tabs extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
			orientation: 0,
			ariaLabel: 1,
			isQuiet: 9,
			isCompact: 10
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Tabs",
			options,
			id: create_fragment$1.name
		});
	}

	get orientation() {
		throw new Error("<Tabs>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set orientation(value) {
		throw new Error("<Tabs>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get ariaLabel() {
		throw new Error("<Tabs>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set ariaLabel(value) {
		throw new Error("<Tabs>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isQuiet() {
		throw new Error("<Tabs>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isQuiet(value) {
		throw new Error("<Tabs>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isCompact() {
		throw new Error("<Tabs>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isCompact(value) {
		throw new Error("<Tabs>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* node_modules/@rubus/rubus/src/packages/Tabs/Tab.svelte generated by Svelte v3.29.4 */
const file$2 = "node_modules/@rubus/rubus/src/packages/Tabs/Tab.svelte";
const get_tab_icon_slot_changes_1 = dirty => ({});
const get_tab_icon_slot_context_1 = ctx => ({});
const get_tab_icon_slot_changes = dirty => ({});
const get_tab_icon_slot_context = ctx => ({});

// (106:0) {:else}
function create_else_block(ctx) {
	let div;
	let t;
	let span;
	let div_class_value;
	let eventsListen_action;
	let current;
	let mounted;
	let dispose;
	const tab_icon_slot_template = /*#slots*/ ctx[12]["tab-icon"];
	const tab_icon_slot = create_slot(tab_icon_slot_template, ctx, /*$$scope*/ ctx[11], get_tab_icon_slot_context_1);
	const default_slot_template = /*#slots*/ ctx[12].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[11], null);

	let div_levels = [
		/*$$restProps*/ ctx[9],
		{
			class: div_class_value = "spectrum-Tabs-item " + (/*disabled*/ ctx[2] && /*notAllowed*/ ctx[3]
			? "not-allowed"
			: "")
		},
		{ tabindex: "0" }
	];

	let div_data = {};

	for (let i = 0; i < div_levels.length; i += 1) {
		div_data = assign(div_data, div_levels[i]);
	}

	const block = {
		c: function create() {
			div = element("div");
			if (tab_icon_slot) tab_icon_slot.c();
			t = space();
			span = element("span");
			if (default_slot) default_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true, tabindex: true });
			var div_nodes = children(div);
			if (tab_icon_slot) tab_icon_slot.l(div_nodes);
			t = claim_space(div_nodes);
			span = claim_element(div_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			if (default_slot) default_slot.l(span_nodes);
			span_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", "spectrum-Tabs-itemLabel");
			add_location(span, file$2, 116, 4, 5728);
			set_attributes(div, div_data);
			toggle_class(div, "spectrum-Tabs-item-disabled", /*disabled*/ ctx[2]);
			toggle_class(div, "is-selected", +/*selfIndex*/ ctx[1] === +/*currentTabIndex*/ ctx[0]);
			add_location(div, file$2, 106, 2, 5392);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			if (tab_icon_slot) {
				tab_icon_slot.m(div, null);
			}

			append_dev(div, t);
			append_dev(div, span);

			if (default_slot) {
				default_slot.m(span, null);
			}

			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(div, "click", /*switchTab*/ ctx[7], false, false, false),
					listen_dev(div, "keydown", /*handleKeydown*/ ctx[8], false, false, false),
					action_destroyer(eventsListen_action = /*eventsListen*/ ctx[6].call(null, div))
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (tab_icon_slot) {
				if (tab_icon_slot.p && dirty & /*$$scope*/ 2048) {
					update_slot(tab_icon_slot, tab_icon_slot_template, ctx, /*$$scope*/ ctx[11], dirty, get_tab_icon_slot_changes_1, get_tab_icon_slot_context_1);
				}
			}

			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 2048) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[11], dirty, null, null);
				}
			}

			set_attributes(div, div_data = get_spread_update(div_levels, [
				dirty & /*$$restProps*/ 512 && /*$$restProps*/ ctx[9],
				(!current || dirty & /*disabled, notAllowed*/ 12 && div_class_value !== (div_class_value = "spectrum-Tabs-item " + (/*disabled*/ ctx[2] && /*notAllowed*/ ctx[3]
				? "not-allowed"
				: ""))) && { class: div_class_value },
				{ tabindex: "0" }
			]));

			toggle_class(div, "spectrum-Tabs-item-disabled", /*disabled*/ ctx[2]);
			toggle_class(div, "is-selected", +/*selfIndex*/ ctx[1] === +/*currentTabIndex*/ ctx[0]);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(tab_icon_slot, local);
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(tab_icon_slot, local);
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (tab_icon_slot) tab_icon_slot.d(detaching);
			if (default_slot) default_slot.d(detaching);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(106:0) {:else}",
		ctx
	});

	return block;
}

// (89:0) {#if href}
function create_if_block(ctx) {
	let a;
	let t;
	let span;
	let a_class_value;
	let eventsListen_action;
	let current;
	let mounted;
	let dispose;
	const tab_icon_slot_template = /*#slots*/ ctx[12]["tab-icon"];
	const tab_icon_slot = create_slot(tab_icon_slot_template, ctx, /*$$scope*/ ctx[11], get_tab_icon_slot_context);
	const default_slot_template = /*#slots*/ ctx[12].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[11], null);

	let a_levels = [
		{ href: /*href*/ ctx[4] },
		{ target: /*target*/ ctx[5] },
		/*$$restProps*/ ctx[9],
		{
			class: a_class_value = "spectrum-Tabs-item " + (/*disabled*/ ctx[2] && /*notAllowed*/ ctx[3]
			? "not-allowed"
			: "")
		},
		{ tabindex: "0" }
	];

	let a_data = {};

	for (let i = 0; i < a_levels.length; i += 1) {
		a_data = assign(a_data, a_levels[i]);
	}

	const block = {
		c: function create() {
			a = element("a");
			if (tab_icon_slot) tab_icon_slot.c();
			t = space();
			span = element("span");
			if (default_slot) default_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", {
				href: true,
				target: true,
				class: true,
				tabindex: true
			});

			var a_nodes = children(a);
			if (tab_icon_slot) tab_icon_slot.l(a_nodes);
			t = claim_space(a_nodes);
			span = claim_element(a_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			if (default_slot) default_slot.l(span_nodes);
			span_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", "spectrum-Tabs-itemLabel");
			add_location(span, file$2, 101, 4, 5309);
			set_attributes(a, a_data);
			toggle_class(a, "spectrum-Tabs-item-disabled", /*disabled*/ ctx[2]);
			toggle_class(a, "is-selected", +/*selfIndex*/ ctx[1] === +/*currentTabIndex*/ ctx[0]);
			add_location(a, file$2, 89, 2, 4951);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);

			if (tab_icon_slot) {
				tab_icon_slot.m(a, null);
			}

			append_dev(a, t);
			append_dev(a, span);

			if (default_slot) {
				default_slot.m(span, null);
			}

			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(a, "click", /*switchTab*/ ctx[7], false, false, false),
					listen_dev(a, "keydown", /*handleKeydown*/ ctx[8], false, false, false),
					action_destroyer(eventsListen_action = /*eventsListen*/ ctx[6].call(null, a))
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (tab_icon_slot) {
				if (tab_icon_slot.p && dirty & /*$$scope*/ 2048) {
					update_slot(tab_icon_slot, tab_icon_slot_template, ctx, /*$$scope*/ ctx[11], dirty, get_tab_icon_slot_changes, get_tab_icon_slot_context);
				}
			}

			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 2048) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[11], dirty, null, null);
				}
			}

			set_attributes(a, a_data = get_spread_update(a_levels, [
				(!current || dirty & /*href*/ 16) && { href: /*href*/ ctx[4] },
				(!current || dirty & /*target*/ 32) && { target: /*target*/ ctx[5] },
				dirty & /*$$restProps*/ 512 && /*$$restProps*/ ctx[9],
				(!current || dirty & /*disabled, notAllowed*/ 12 && a_class_value !== (a_class_value = "spectrum-Tabs-item " + (/*disabled*/ ctx[2] && /*notAllowed*/ ctx[3]
				? "not-allowed"
				: ""))) && { class: a_class_value },
				{ tabindex: "0" }
			]));

			toggle_class(a, "spectrum-Tabs-item-disabled", /*disabled*/ ctx[2]);
			toggle_class(a, "is-selected", +/*selfIndex*/ ctx[1] === +/*currentTabIndex*/ ctx[0]);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(tab_icon_slot, local);
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(tab_icon_slot, local);
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
			if (tab_icon_slot) tab_icon_slot.d(detaching);
			if (default_slot) default_slot.d(detaching);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(89:0) {#if href}",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*href*/ ctx[4]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				}

				transition_in(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	const omit_props_names = [
		"currentTabIndex","selfIndex","tabAutoSwitch","disabled","notAllowed","href","target"
	];

	let $$restProps = compute_rest_props($$props, omit_props_names);
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Tab", slots, ['tab-icon','default']);
	let { currentTabIndex = 0 } = $$props;
	let { selfIndex = 0 } = $$props;
	let { tabAutoSwitch = true } = $$props;
	let { disabled = false } = $$props;
	let { notAllowed = false } = $$props;
	let { href = "" } = $$props;
	let { target = "" } = $$props;
	const eventsListen = getEventsAction(current_component);

	function switchTab() {
		if (tabAutoSwitch && !disabled) {
			return $$invalidate(0, currentTabIndex = selfIndex);
		}
	}

	function handleKeydown(e) {
		let _e = event ? window.event : e;

		if (_e.keyCode == 13 || _e.keyCode == 32) {
			switchTab();
		}
	}

	$$self.$$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(9, $$restProps = compute_rest_props($$props, omit_props_names));
		if ("currentTabIndex" in $$new_props) $$invalidate(0, currentTabIndex = $$new_props.currentTabIndex);
		if ("selfIndex" in $$new_props) $$invalidate(1, selfIndex = $$new_props.selfIndex);
		if ("tabAutoSwitch" in $$new_props) $$invalidate(10, tabAutoSwitch = $$new_props.tabAutoSwitch);
		if ("disabled" in $$new_props) $$invalidate(2, disabled = $$new_props.disabled);
		if ("notAllowed" in $$new_props) $$invalidate(3, notAllowed = $$new_props.notAllowed);
		if ("href" in $$new_props) $$invalidate(4, href = $$new_props.href);
		if ("target" in $$new_props) $$invalidate(5, target = $$new_props.target);
		if ("$$scope" in $$new_props) $$invalidate(11, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({
		current_component,
		getEventsAction,
		currentTabIndex,
		selfIndex,
		tabAutoSwitch,
		disabled,
		notAllowed,
		href,
		target,
		eventsListen,
		switchTab,
		handleKeydown
	});

	$$self.$inject_state = $$new_props => {
		if ("currentTabIndex" in $$props) $$invalidate(0, currentTabIndex = $$new_props.currentTabIndex);
		if ("selfIndex" in $$props) $$invalidate(1, selfIndex = $$new_props.selfIndex);
		if ("tabAutoSwitch" in $$props) $$invalidate(10, tabAutoSwitch = $$new_props.tabAutoSwitch);
		if ("disabled" in $$props) $$invalidate(2, disabled = $$new_props.disabled);
		if ("notAllowed" in $$props) $$invalidate(3, notAllowed = $$new_props.notAllowed);
		if ("href" in $$props) $$invalidate(4, href = $$new_props.href);
		if ("target" in $$props) $$invalidate(5, target = $$new_props.target);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		currentTabIndex,
		selfIndex,
		disabled,
		notAllowed,
		href,
		target,
		eventsListen,
		switchTab,
		handleKeydown,
		$$restProps,
		tabAutoSwitch,
		$$scope,
		slots
	];
}

class Tab extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$2, create_fragment$2, safe_not_equal, {
			currentTabIndex: 0,
			selfIndex: 1,
			tabAutoSwitch: 10,
			disabled: 2,
			notAllowed: 3,
			href: 4,
			target: 5
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Tab",
			options,
			id: create_fragment$2.name
		});
	}

	get currentTabIndex() {
		throw new Error("<Tab>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set currentTabIndex(value) {
		throw new Error("<Tab>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selfIndex() {
		throw new Error("<Tab>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selfIndex(value) {
		throw new Error("<Tab>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get tabAutoSwitch() {
		throw new Error("<Tab>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set tabAutoSwitch(value) {
		throw new Error("<Tab>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get disabled() {
		throw new Error("<Tab>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set disabled(value) {
		throw new Error("<Tab>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get notAllowed() {
		throw new Error("<Tab>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set notAllowed(value) {
		throw new Error("<Tab>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get href() {
		throw new Error("<Tab>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set href(value) {
		throw new Error("<Tab>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get target() {
		throw new Error("<Tab>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set target(value) {
		throw new Error("<Tab>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/docs/basic/button/_layout.svelte generated by Svelte v3.29.4 */
const file$3 = "src/routes/docs/basic/button/_layout.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[11] = list[i];
	child_ctx[13] = i;
	return child_ctx;
}

// (45:2) <TypographyHeading scale="XL">
function create_default_slot_4(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Button");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Button");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_4.name,
		type: "slot",
		source: "(45:2) <TypographyHeading scale=\\\"XL\\\">",
		ctx
	});

	return block;
}

// (47:4) <TypographyBody scale="M">
function create_default_slot_3(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("常规按钮组件，一般用于给定用户操作提供选项");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "常规按钮组件，一般用于给定用户操作提供选项");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3.name,
		type: "slot",
		source: "(47:4) <TypographyBody scale=\\\"M\\\">",
		ctx
	});

	return block;
}

// (46:2) <Flex spacing={{ height: 'size-600' }} alignItems="center">
function create_default_slot_2(ctx) {
	let typographybody;
	let current;

	typographybody = new TypographyBody({
			props: {
				scale: "M",
				$$slots: { default: [create_default_slot_3] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(typographybody.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(typographybody.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(typographybody, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const typographybody_changes = {};

			if (dirty & /*$$scope*/ 256) {
				typographybody_changes.$$scope = { dirty, ctx };
			}

			typographybody.$set(typographybody_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(typographybody.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(typographybody.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(typographybody, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2.name,
		type: "slot",
		source: "(46:2) <Flex spacing={{ height: 'size-600' }} alignItems=\\\"center\\\">",
		ctx
	});

	return block;
}

// (53:6) <Tab         selfIndex={i}         {currentTabIndex}         href={tab.url}         on:click={() => {           currentTabIndex = i;         }}>
function create_default_slot_1(ctx) {
	let t0_value = /*tab*/ ctx[11].name + "";
	let t0;
	let t1;

	const block = {
		c: function create() {
			t0 = text(t0_value);
			t1 = space();
		},
		l: function claim(nodes) {
			t0 = claim_text(nodes, t0_value);
			t1 = claim_space(nodes);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, t1, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(t1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(53:6) <Tab         selfIndex={i}         {currentTabIndex}         href={tab.url}         on:click={() => {           currentTabIndex = i;         }}>",
		ctx
	});

	return block;
}

// (52:4) {#each tabList as tab, i}
function create_each_block(ctx) {
	let tab;
	let current;

	function click_handler(...args) {
		return /*click_handler*/ ctx[7](/*i*/ ctx[13], ...args);
	}

	tab = new Tab({
			props: {
				selfIndex: /*i*/ ctx[13],
				currentTabIndex: /*currentTabIndex*/ ctx[0],
				href: /*tab*/ ctx[11].url,
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	tab.$on("click", click_handler);

	const block = {
		c: function create() {
			create_component(tab.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(tab.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(tab, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const tab_changes = {};
			if (dirty & /*currentTabIndex*/ 1) tab_changes.currentTabIndex = /*currentTabIndex*/ ctx[0];

			if (dirty & /*$$scope*/ 256) {
				tab_changes.$$scope = { dirty, ctx };
			}

			tab.$set(tab_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(tab.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(tab.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(tab, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(52:4) {#each tabList as tab, i}",
		ctx
	});

	return block;
}

// (51:2) <Tabs>
function create_default_slot(ctx) {
	let each_1_anchor;
	let current;
	let each_value = /*tabList*/ ctx[4];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = empty();
		},
		l: function claim(nodes) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_1_anchor = empty();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert_dev(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*currentTabIndex, tabList*/ 17) {
				each_value = /*tabList*/ ctx[4];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(each_1_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(51:2) <Tabs>",
		ctx
	});

	return block;
}

function create_fragment$3(ctx) {
	let title_value;
	let t0;
	let header;
	let typographyheading;
	let t1;
	let flex;
	let t2;
	let nav;
	let tabs;
	let t3;
	let main;
	let current;
	document.title = title_value = "" + (/*$rubusDocConfig*/ ctx[1].name + " Button");

	typographyheading = new TypographyHeading({
			props: {
				scale: "XL",
				$$slots: { default: [create_default_slot_4] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	flex = new Flex({
			props: {
				spacing: { height: "size-600" },
				alignItems: "center",
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	tabs = new Tabs({
			props: {
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const default_slot_template = /*#slots*/ ctx[6].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[8], null);

	const block = {
		c: function create() {
			t0 = space();
			header = element("header");
			create_component(typographyheading.$$.fragment);
			t1 = space();
			create_component(flex.$$.fragment);
			t2 = space();
			nav = element("nav");
			create_component(tabs.$$.fragment);
			t3 = space();
			main = element("main");
			if (default_slot) default_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-an9x59\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			header = claim_element(nodes, "HEADER", { class: true });
			var header_nodes = children(header);
			claim_component(typographyheading.$$.fragment, header_nodes);
			t1 = claim_space(header_nodes);
			claim_component(flex.$$.fragment, header_nodes);
			header_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			nav = claim_element(nodes, "NAV", {});
			var nav_nodes = children(nav);
			claim_component(tabs.$$.fragment, nav_nodes);
			nav_nodes.forEach(detach_dev);
			t3 = claim_space(nodes);
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			if (default_slot) default_slot.l(main_nodes);
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(header, "class", "svelte-1f9x9sc");
			add_location(header, file$3, 43, 0, 1481);
			add_location(nav, file$3, 49, 0, 1700);
			attr_dev(main, "class", "svelte-1f9x9sc");
			add_location(main, file$3, 65, 0, 1958);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, header, anchor);
			mount_component(typographyheading, header, null);
			append_dev(header, t1);
			mount_component(flex, header, null);
			insert_dev(target, t2, anchor);
			insert_dev(target, nav, anchor);
			mount_component(tabs, nav, null);
			insert_dev(target, t3, anchor);
			insert_dev(target, main, anchor);

			if (default_slot) {
				default_slot.m(main, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*$rubusDocConfig*/ 2) && title_value !== (title_value = "" + (/*$rubusDocConfig*/ ctx[1].name + " Button"))) {
				document.title = title_value;
			}

			const typographyheading_changes = {};

			if (dirty & /*$$scope*/ 256) {
				typographyheading_changes.$$scope = { dirty, ctx };
			}

			typographyheading.$set(typographyheading_changes);
			const flex_changes = {};

			if (dirty & /*$$scope*/ 256) {
				flex_changes.$$scope = { dirty, ctx };
			}

			flex.$set(flex_changes);
			const tabs_changes = {};

			if (dirty & /*$$scope, currentTabIndex*/ 257) {
				tabs_changes.$$scope = { dirty, ctx };
			}

			tabs.$set(tabs_changes);

			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 256) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[8], dirty, null, null);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(typographyheading.$$.fragment, local);
			transition_in(flex.$$.fragment, local);
			transition_in(tabs.$$.fragment, local);
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(typographyheading.$$.fragment, local);
			transition_out(flex.$$.fragment, local);
			transition_out(tabs.$$.fragment, local);
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(header);
			destroy_component(typographyheading);
			destroy_component(flex);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(nav);
			destroy_component(tabs);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(main);
			if (default_slot) default_slot.d(detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	let $page;
	let $rubusDocConfig;
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Layout", slots, ['default']);
	const { page } = stores$1();
	validate_store(page, "page");
	component_subscribe($$self, page, value => $$invalidate(9, $page = value));
	let rubusDocConfig = getContext("rubusDocConfig");
	validate_store(rubusDocConfig, "rubusDocConfig");
	component_subscribe($$self, rubusDocConfig, value => $$invalidate(1, $rubusDocConfig = value));
	let { segment } = $$props;

	let tabList = [
		{
			name: "用法",
			url: "docs/basic/button/usage"
		},
		{
			name: "Props",
			url: "docs/basic/button/props"
		},
		{
			name: "用例",
			url: "docs/basic/button/examples"
		},
		{
			name: "问题",
			url: "docs/basic/button/issues"
		}
	];

	let currentTabIndex = 0;

	function tabCurrentTabIndex() {
		for (let index = 0; index < tabList.length; index++) {
			if ($page.path.substr(1) == tabList[index].url) {
				$$invalidate(0, currentTabIndex = index);
			}
		}
	}

	onMount(() => {
		tabCurrentTabIndex();
	});

	const writable_props = ["segment"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Layout> was created with unknown prop '${key}'`);
	});

	const click_handler = i => {
		$$invalidate(0, currentTabIndex = i);
	};

	$$self.$$set = $$props => {
		if ("segment" in $$props) $$invalidate(5, segment = $$props.segment);
		if ("$$scope" in $$props) $$invalidate(8, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({
		TypographyHeading,
		Flex,
		TypographyBody,
		Tab,
		Tabs,
		onMount,
		getContext,
		stores: stores$1,
		page,
		rubusDocConfig,
		segment,
		tabList,
		currentTabIndex,
		tabCurrentTabIndex,
		$page,
		$rubusDocConfig
	});

	$$self.$inject_state = $$props => {
		if ("rubusDocConfig" in $$props) $$invalidate(3, rubusDocConfig = $$props.rubusDocConfig);
		if ("segment" in $$props) $$invalidate(5, segment = $$props.segment);
		if ("tabList" in $$props) $$invalidate(4, tabList = $$props.tabList);
		if ("currentTabIndex" in $$props) $$invalidate(0, currentTabIndex = $$props.currentTabIndex);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		currentTabIndex,
		$rubusDocConfig,
		page,
		rubusDocConfig,
		tabList,
		segment,
		slots,
		click_handler,
		$$scope
	];
}

class Layout extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, { segment: 5 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Layout",
			options,
			id: create_fragment$3.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*segment*/ ctx[5] === undefined && !("segment" in props)) {
			console.warn("<Layout> was created without expected prop 'segment'");
		}
	}

	get segment() {
		throw new Error("<Layout>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set segment(value) {
		throw new Error("<Layout>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Layout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
